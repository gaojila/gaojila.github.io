<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>容器(🚢) - 分类 - 哥斯拉的小站</title><link>https://gaojila.github.io/categories/%E5%AE%B9%E5%99%A8/</link><description>容器(🚢) - 分类 - 哥斯拉的小站</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>redgaojila@gmail.com (Gojila)</managingEditor><webMaster>redgaojila@gmail.com (Gojila)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 23 Apr 2020 14:05:12 +0800</lastBuildDate><atom:link href="https://gaojila.github.io/categories/%E5%AE%B9%E5%99%A8/" rel="self" type="application/rss+xml"/><item><title>k8s-service</title><link>https://gaojila.github.io/k8s%E6%9C%8D%E5%8A%A1/</link><pubDate>Thu, 23 Apr 2020 14:05:12 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/k8s%E6%9C%8D%E5%8A%A1/</guid><description>Service 的类型 ClusterIP： 默认类型，自动分配一个仅 Cluster 内部可以访问的虚拟 IP。 NodePort： 在 ClusterIP 的基础上为 service 在每台机器撒谎那个绑定一个端</description></item><item><title>k8s资源控制器JobCronJob</title><link>https://gaojila.github.io/k8s%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8jobcronjob/</link><pubDate>Tue, 21 Apr 2020 15:21:28 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/k8s%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8jobcronjob/</guid><description>Job Job 负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个 Pod 成功结束 特殊说明： spec.template 格式同 Pod RestartPolicy 仅支持 Never 或 OnFailure 单个 Pod 时，默认 Pod 成功运行后 Job</description></item><item><title>k8s资源控制器DaemonSet</title><link>https://gaojila.github.io/k8s%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8daemonset/</link><pubDate>Tue, 21 Apr 2020 14:59:55 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/k8s%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8daemonset/</guid><description>什么是 DaemonSet DaemonSet 确保全部（或者一些）Node 上运行一个 Pod 的副本，当有 Node 加入集群时，也会为他们新增一个 Pod，当有 Node 从集群移除时，这些 Pod 也会被回收，</description></item><item><title>k8s探针</title><link>https://gaojila.github.io/k8s%E6%8E%A2%E9%92%88/</link><pubDate>Sun, 19 Apr 2020 18:25:01 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/k8s%E6%8E%A2%E9%92%88/</guid><description>配置 readiness 和 liveness 探针 **(参考 Jimmy Song 大佬的文章学习)** Kubelet 使用 liveness probe（存活探针）来确定何时重启容器。例如，当应用程序处于运行状态但无法做进一步</description></item><item><title>k8s资源控制器</title><link>https://gaojila.github.io/k8s%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8/</link><pubDate>Wed, 12 Feb 2020 18:45:23 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/k8s%E8%B5%84%E6%BA%90%E6%8E%A7%E5%88%B6%E5%99%A8/</guid><description>ReplicaSet 什么是 ReplicaSet？ ReplicaSet 是下一代复本控制器。ReplicaSet 和 Replication Controller 之间的唯一区别是现在的选择器支持。Replication Controller 只支</description></item><item><title>ubuntu1804国内使用kubeadm部署k8s</title><link>https://gaojila.github.io/ubuntu1804%E5%9B%BD%E5%86%85%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2k8s/</link><pubDate>Thu, 06 Feb 2020 21:33:36 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/ubuntu1804%E5%9B%BD%E5%86%85%E4%BD%BF%E7%94%A8kubeadm%E9%83%A8%E7%BD%B2k8s/</guid><description>安装前准备 kvm 准备 3 台虚拟机 kube-master kube-node1 kube-node2 关闭防火墙 1 sudo ufw disable 关闭 swap 临时关闭 1 sudo swapoff -a 永久关闭 1 /etc/fstab 注释swap行 安装 docker 卸载旧 docker 1 sudo apt-get remove docker docker-engine docker.io 彻底删除 docker-ce 和 docker-cli</description></item><item><title>podman搭建nexus3私有仓库</title><link>https://gaojila.github.io/podman%E6%90%AD%E5%BB%BAnexus3%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</link><pubDate>Fri, 09 Aug 2019 09:36:00 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/podman%E6%90%AD%E5%BB%BAnexus3%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/</guid><description>前言 使用新工具 podman 搭建 docker 私有仓库下面简述 podman 的优点 podman 无守护进程 每一个容器就是一个进程 非 root 用户也可执行 podman 命令和 docker 命令大体一致 方法 ubuntu 安装 podman 1 2 3 4 sudo</description></item><item><title>docker私有仓库pull和push</title><link>https://gaojila.github.io/docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93pull%E5%92%8Cpush/</link><pubDate>Fri, 09 Aug 2019 08:46:17 +0800</pubDate><author>作者</author><guid>https://gaojila.github.io/docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93pull%E5%92%8Cpush/</guid><description><![CDATA[login 1 docker login &lt;host&gt; pull 1 docker pull &lt;host&gt;/&lt;porject&gt;/&lt;repo&gt;:&lt;tag&gt; push 重新打 tag 1 docker tag &lt;img_name&gt;:&lt;tage&gt; &lt;host&gt;/&lt;project&gt;/&lt;repo&gt;:&lt;tag&gt; push 1 docker push &lt;host&gt;/&lt;porject&gt;/&lt;repo&gt;:&lt;tag&gt;]]></description></item></channel></rss>